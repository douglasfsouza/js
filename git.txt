Conceito de repositorio distribuido

git config --list
git config --global user.name "Douglas Ferreira"
git config --globl user.email "douglas.ferreira@totvs.com.br"
git push --set-upstream origin master (fazer upload do seu repositorio)
git pull origin - funcionou
gitignore - um arquivo informar arquivos para ignorar pois nao precisam subir 

escopos:
system
global
local

git remote -v (para ver os repostitorios)

ssh-keygen (gera chaves)
bitbucket (site de repositorios)
gitlab tambem
azure devops tambem

tag usado para indicar a versao

bom fazer pequenos commits

operacoes remotas
  clone - tira uma copia do repositorio central
  ls-remote
  fetch (atualiza o repositorio local, nao funcionou)
    p/ funcionar precisa fazer o merge
    ex. git fetch --all
        git merge
  pull(atualiza o repositorio e a area de trabalho fazendo merge)
     ex. git pull origin master
  push (check-in)
     git push -u origin master

git branch -a (ver as branches criadas)

a branch enxerga tudo que foi comitado nela e tambem o que foi incluido ou modificado em outras branches e ainda nao comitado, mas assim que comitar na branch somente ela exerga o conteudo commitado. então para as outras tambem enxergarem precisam fazer merge

git commmit -a -m  "alteracoes" (com -a inclui na index e da commit, mas nao funciona para arquivos novos)
-m=mensagem

git log -10

git status
git status -s (shortcut)
git pull
git stash apply
git add
git stash list

stash - volta o codigo original salvando as alteracoes
index - para ver o que vai comitar


git reset arquivo (para tirar o arquivo da index)
git rm (tira e exclui o arquivo)

git clean - para desfazer a alteração nao confirmada, nao funcionou,
so funciona com arquivos novos,
para desfazer uma alteração nao confirmada:
  git rm arquivo -f
  git pull - nao trouxe o arquivo devolta, excluir a branch..
  git restore <file> - para descartar as alteraçoes
ou git checkout -- <file> - depende da versao do git
git add --all (comita todos os arquivos da index)

git rm "arquivo" --cached (apenas remove da index)

git stash save 
git stash apply 0 (aplica a id 0)

git branch -a (lista todas)
git checkout -b develop (cria de muda para develop)

git revert <sha> para desfazer um checkin      - computador remoto
  precisa fazer um novo checkin
git stash - para desfazer antes do checkin
git reset HEAD~1 para desfazer o ultimo commit - computador local
git rebase

git show <commit> - ver o commit
git log <arquivo> - ver as alteracoes no arquivo

git merge --squash

git help tutorial

head é o ultimo commit feito, normalmente com o nome da branch

learninggitbranching.js.org

https://git-scm.com/book/pt-br/v2 (muito bom e em portugues)

try.github.io

github.com/globocom
github.com/loiane

Excluir uma branch
git branch -d <nome>

fork - uma copia do repositorio

git diff id1..id2
id1 - informar a mais antiga
id2 - informar a mais recente

Criando um projeto na nuvem GIT	:
Entrar git-scm.com
fazer o download p/ windows
ou get apt git p/ linux
criar usr e logar
git mergetool -> Resolver conflitos de merge
git mergetool --tool vimdiff
  editar a melhor split, salvar e sair
  :wqa -> para salvar tudo
  git config --global mergetool.keepBackup false
  
Erros:
  Erro com git clone, ao colar vem caracteres invalidos, digite o endereco

